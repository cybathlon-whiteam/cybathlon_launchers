<?xml version="1.0"?>
<launch>
	<!-- acquisition arguments -->
		<arg name="plugin" default='rosneuro::EGDDevice'/>
		<!-- <arg name="devarg" default='gtec'/> -->  <!-- The real device -->
		<arg name="devarg"     default='/var/home/piero/my.gdf'/> 	<!-- a test file -->
		<arg name="framerate"  default='16'/>
		<arg name="samplerate" default='512'/>

	<!-- processing arguments -->
		<arg name="lap_path"     default='/var/home/piero/Projects/ros/cybathlon-ws/src/cybathlon_launchers/extra/laplacian16.dat'/>
		<arg name="decoder_path" default='/var/home/piero/Projects/ros/cybathlon-ws/src/cybathlon_launchers/extra/s3_bhbf_20230206.smr.dat'/>
		<arg name="n_channels"   default='16'/>
		<arg name="eog_threshold" default='43.0'/> 

	<!-- recorder -->
		<arg name="autostart" default='true'/>
		<arg name="filepath"  default='/var/home/piero/' />

	<!-- decision making arguments -->
		<arg name="threshold"   	 default='0.7, 0.7'/> 
		<arg name="threshold_hard"   	 default='0.7, 0.7'/>  <!-- I may have different threshold -->
		<arg name="threshold_soft"   	 default='0.3, 0.3'/>  <!-- I may have different threshold -->

		<arg name="alpha" 			   default='0.97'/>
		<arg name="rejection_thr"  default='0.55' />

  <!-- protocol arguments -->
		<arg name="subject"   default="s3"/> <!-- This is Piero's code-->
		<arg name="modality"  default="control"/>
		<arg name="task"      default="mi_bhbf"/>
		<arg name="extra"     default=""/>

  <!-- feedback arguments -->
		<arg name="protocol_mode"   default='3'/> <!-- 3: continuos -->
		<arg name="n_classes"   		default='2'/>
		<arg name="n_trials"   		 default='10'/>

	<!-- Protocol parameters -->
		<rosparam param="/protocol/subject"	 subst_value="True">$(arg subject)</rosparam>
		<rosparam param="/protocol/modality" subst_value="True">$(arg modality)</rosparam>
		<rosparam param="/protocol/task"	 subst_value="True">$(arg task)</rosparam>
		<rosparam param="/protocol/extra"	 subst_value="True">$(arg extra)</rosparam>



	<!-- interface to the game node -->
	<node pkg="ros_cybathlon_interface" type="ros_cybathlon_interface" name="ros_cybathlon_interface" />  
	<!-- TODO: check the respaun of this interface -->

	<!-- ROS-Neuro pipeline -->
	<!-- Aquisition of the BMI signals -->
	<node name="acquisition" pkg="rosneuro_acquisition" type="acquisition" >
		<param name="~plugin" 	  value="$(arg plugin)"/>
		<param name="~devarg" 	  value="$(arg devarg)"/>
		<param name="~samplerate" value="$(arg samplerate)"/>
		<param name="~framerate"  value="$(arg framerate)"/>
	</node>
	<!-- Recorder of the BMI signals -->
	<node name="recorder" pkg="rosneuro_recorder" type="recorder" >
  	  <param name="~autostart" value="$(arg autostart)"/>
  	  <param name="~filepath" value="$(arg filepath)"/>
  </node>
	<!-- eog node -->
  <!--<node name="eogbci" pkg="rosneuro_processing" type="test_eogbci" output="screen">
    <param name="~eog_threshold" value="$(arg eog_threshold)"/>
    <param name="~eog_left_channel" value="1"/>
    <param name="~eog_right_channel" value="1"/>
    <param name="~n_channels" value="$(arg n_channels)"/>
  </node>-->
  <!-- Visualizer of the BMI signal (not needed) -->
  <!-- <node name="neuroviz" pkg="rosneuro_visualizer" type="neuroviz" /> -->

	<!-- ROS-Neuro pipeline -->
	<!-- processing of the data -->
	<node name="smrbci" pkg="rosneuro_processing" type="test_smrbci" >
    <param name="~lap_path" value="$(arg lap_path)"/>
    <param name="~decoder_path" value="$(arg decoder_path)"/>
    <param name="~n_channels" value="$(arg n_channels)"/>
  </node>
  <!-- Decision making node -->
  <node name="integrator" pkg="rosneuro_decisionmaking" type="test_decisionmaking">
    <param name="~control_thr" value="$(arg threshold)"/>
    <param name="~integration_alpha" value="$(arg alpha)"/>
    <param name="~rejection_thr" value="$(arg rejection_thr)" />
  </node>  
  <!-- feedback node -->
  <node name="smr_feedback" pkg="feedback_dwheel" type="feedback_node.py" >
    <param name="~window_height" value="384"/>
    <param name="~window_width" value="512"/>
    <param name="~window_scale" value="2"/>
    <param name="~window_title" value="Evaluation Feedback"/>

    <param name="~protocol_mode" value="$(arg protocol_mode)"/>

    <param name="~n_classes" value="$(arg n_classes)"/>
    <param name="~n_trials" value="$(arg n_trials)"/>

    <param name="~thresholds" value="$(arg threshold)"/>
		<param name="~thresholds_hard" value="$(arg threshold_hard)"/>
    <param name="~thresholds_soft" value="$(arg threshold_soft)"/>



    <param name="~timings_begin" value="3000"/>
    <param name="~timings_fixation" value="3000"/>
    <param name="~timings_cue" value="1000"/>
    <param name="~timings_iti" value="1000"/>
    <param name="~timings_feedback_min" value="4000"/>
    <param name="~timings_feedback_max" value="5500"/>
    <param name="~timings_feedback_update" value="35"/>
    <param name="~timings_boom" value="1000"/>
    <param name="~timings_end" value="3000"/>
    <param name='~timings_eog_timeout' value = "1000"/>
  </node>

  <!-- rosneuro reconfigure node -->
  <!-- <node name="rosneuro_reconf" pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen" /> -->

	<!-- Comunication between the neurodata and the game interface -->
	<node pkg="ros_cybathlon_interface" type="ros_control_bci" name="ros_control_bci" output="screen" /> 

</launch>
